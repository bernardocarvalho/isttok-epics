from org.csstudio.opibuilder.scriptUtil import PVUtil
from org.csstudio.opibuilder.scriptUtil import ScriptUtil
val = PVUtil.getDouble(pvs[0])
if val == 1:
	val = 0
	pvs[0].setValue(val)
	out_option = display.getWidget("TextInputOutOption").getPropertyValue("text")
	filename = "/home/opertok/CSS-Workspaces/sys-mng-opi/CSS/gams/"+display.getWidget("FileNameTextInput2").getPropertyValue("text")+"GAM/"+display.getWidget("FileNameTextInput2").getPropertyValue("text")+"GAM.cfg"
	myfile = open(filename, 'a')
	myfile.write('+StateMachine = {\n')
	myfile.write('\tClass = StateMachine\n')
	myfile.write('\tVerboseLevel = 10\n')
	myfile.write('\t+OFF = {\n')
	myfile.write('\t\tClass = StateMachineState\n')
	myfile.write('\t\tStateCode = 0x0\n')
	myfile.write('\t\t+START = {\n')
	myfile.write('\t\t\tClass = StateMachineEvent\n')
	myfile.write('\t\t\tValue = START\n')
	myfile.write('\t\t\tNextState = READY\n')
	myfile.write('\t\t\t+SWITCH_ON = {\n')
	myfile.write('\t\t\t\tClass = MessageDeliveryRequest\n')
	myfile.write('\t\t\t\tMsecTimeOut = 1000\n')
	myfile.write('\t\t\t\tSender = StateMachine\n')
	myfile.write('\t\t\t\tDestinations = "HTTPSERVER MARTe"\n')
	myfile.write('\t\t\t\tFlags = NoReply\n')
	myfile.write('\t\t\t\tMessage = {\n')
	myfile.write('\t\t\t\t\tClass = Message\n')
	myfile.write('\t\t\t\t\tContent = START\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t}\n')
	myfile.write('\t\t}\n')
	myfile.write('\t}\n')
	myfile.write('\t+READY = {\n')
	myfile.write('\t\tClass = StateMachineState\n')
	myfile.write('\t\tStateCode = 0x500\n')
	myfile.write('\t\t+START_PULSE_SEQUENCE = {\n')
	myfile.write('\t\t\tClass = StateMachineEvent\n')
	myfile.write('\t\t\tNextState = INITIALISING\n')
	myfile.write('\t\t\tCode = 0x701\n')
	myfile.write('\t\t\t+NOTIFY = {\n')
	myfile.write('\t\t\t\tClass = MessageEnvelope\n')
	myfile.write('\t\t\t\tSender = StateMachine\n')
	myfile.write('\t\t\t\tDestination = MARTe\n')
	myfile.write('\t\t\t\t+MESSAGE = {\n')
	myfile.write('\t\t\t\t\tClass = Message\n')
	myfile.write('\t\t\t\t\tContent = PREPULSECHECK\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t}\n')
	myfile.write('\t\t\t+UPDATE_MSS = {\n')
	myfile.write('\t\t\t\tClass = MessageEnvelope\n')
	myfile.write('\t\t\t\tDestination = MATLABSignalServer\n')
	myfile.write('\t\t\t\t+MESSAGE = {\n')
	myfile.write('\t\t\t\t\tClass = Message\n')
	myfile.write('\t\t\t\t\tContent = AUTODETECT\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t}\n')
	myfile.write('\t\t\t+UPDATE_SS = {\n')
	myfile.write('\t\t\t\tClass = MessageEnvelope\n')
	myfile.write('\t\t\t\tDestination = HTTPSignalServer\n')
	myfile.write('\t\t\t\t+MESSAGE = {\n')
	myfile.write('\t\t\t\t\tClass = Message\n')
	myfile.write('\t\t\t\t\tContent = AUTODETECT\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t}\n')
	myfile.write('\t\t\t+UPDATE_FLOT = {\n')
	myfile.write('\t\t\t\tClass = MessageEnvelope\n')
	myfile.write('\t\t\t\tDestination = FlotPlot\n')
	myfile.write('\t\t\t\t+MESSAGE = {\n')
	myfile.write('\t\t\t\t\tClass = Message\n')
	myfile.write('\t\t\t\t\tContent = AUTODETECT\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t}\n')
	myfile.write('\t\t}\n')
	myfile.write('\t\t+UNRECOVERABLE = {\n')
	myfile.write('\t\t\tClass = StateMachineEvent\n')
	myfile.write('\t\t\tNextState = UNRECOVERABLE\n')
	myfile.write('\t\t\tCode = 0x776\n')
	myfile.write('\t\t}\n')
	myfile.write('\t\t+CONFIG_ERROR = {\n')
	myfile.write('\t\t\tClass = StateMachineEvent\n')
	myfile.write('\t\t\tNextState = CONFIG_ERROR\n')
	myfile.write('\t\t\tCode = 0x777\n')
	myfile.write('\t\t}\n')
	myfile.write('\t\t+CONFIG_OK = {\n')
	myfile.write('\t\t\tClass = StateMachineEvent\n')
	myfile.write('\t\t\tNextState = SAMESTATE\n')
	myfile.write('\t\t\tCode = 0x778\n')
	myfile.write('\t\t\t+NOTIFY = {\n')
	myfile.write('\t\t\t\tClass = MessageEnvelope\n')
	myfile.write('\t\t\t\tSender = StateMachine\n')
	myfile.write('\t\t\t\tDestination = COULD.BE.A.MIMIC\n')
	myfile.write('\t\t\t\t+SENDSTATE = {\n')
	myfile.write('\t\t\t\t\tClass = Message\n')
	myfile.write('\t\t\t\t\tCode = 0x500\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t}\n')
	myfile.write('\t\t}\n')
	myfile.write('\t\t+SWITCH_OFF = {\n')
	myfile.write('\t\t\tClass = StateMachineEvent\n')
	myfile.write('\t\t\tValue = STOP\n')
	myfile.write('\t\t\tNextState = READY\n')
	myfile.write('\t\t\tCode = 0x005\n')
	myfile.write('\t\t\t+STOPALL = {\n')
	myfile.write('\t\t\t\tClass = MessageDeliveryRequest\n')
	myfile.write('\t\t\t\tMsecTimeOut = 1000\n')
	myfile.write('\t\t\t\tSender = StateMachine\n')
	myfile.write('\t\t\t\tDestinations = "HTTPSERVER MARTe"\n')
	myfile.write('\t\t\t\tFlags = NoReply\n')
	myfile.write('\t\t\t\tMessage = {\n')
	myfile.write('\t\t\t\t\tClass = Message\n')
	myfile.write('\t\t\t\t\tContent = STOP\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t}\n')
	myfile.write('\t\t}\n')
	myfile.write('\t}\n')
	myfile.write('\t+INITIALISING = {\n')
	myfile.write('\t\tClass = StateMachineState\n')
	myfile.write('\t\tStateCode = 0x508\n')
	myfile.write('\t\t+PRE_PULSE_CHECKS_FINISHED = {\n')
	myfile.write('\t\t\tClass = StateMachineEvent\n')
	myfile.write('\t\t\tNextState = INITIALISED\n')
	myfile.write('\t\t\tCode = 0x705\n')
	myfile.write('\t\t}\n')
	myfile.write('\t\t+ABORT = {\n')
	myfile.write('\t\t\tClass = StateMachineEvent\n')
	myfile.write('\t\t\tNextState = READY\n')
	myfile.write('\t\t\tCode = 0x702\n')
	myfile.write('\t\t\t+NOTIFY = {\n')
	myfile.write('\t\t\t\tClass = MessageEnvelope\n')
	myfile.write('\t\t\t\tSender = StateMachine\n')
	myfile.write('\t\t\t\tDestination = MARTe\n')
	myfile.write('\t\t\t\t+MESSAGE = {\n')
	myfile.write('\t\t\t\t\tClass = Message\n')
	myfile.write('\t\t\t\t\tContent = PULSESTOP\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t}\n')
	myfile.write('\t\t}\n')
	myfile.write('\t}\n')
	myfile.write('\t+INITIALISED = {\n')
	myfile.write('\t\tClass = StateMachineState\n')
	myfile.write('\t\tStateCode = 0x504\n')
	myfile.write('\t\t+START_PULSE = {\n')
	myfile.write('\t\t\tClass = StateMachineEvent\n')
	myfile.write('\t\t\tNextState = EXECUTING\n')
	myfile.write('\t\t\tCode = 0x708\n')
	myfile.write('\t\t\t+NOTIFY = {\n')
	myfile.write('\t\t\t\tClass = MessageEnvelope\n')
	myfile.write('\t\t\t\tSender = StateMachine\n')
	myfile.write('\t\t\t\tDestination = MARTe\n')
	myfile.write('\t\t\t\t+MESSAGE = {\n')
	myfile.write('\t\t\t\t\tClass = Message\n')
	myfile.write('\t\t\t\t\tContent = PULSESTART\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t}\n')
	myfile.write('\t\t}\n')
	myfile.write('\t\t+ABORT = {\n')
	myfile.write('\t\t\tClass = StateMachineEvent\n')
	myfile.write('\t\t\tNextState = READY\n')
	myfile.write('\t\t\tCode = 0x702\n')
	myfile.write('\t\t\t+NOTIFY = {\n')
	myfile.write('\t\t\t\tClass = MessageEnvelope\n')
	myfile.write('\t\t\t\tSender = StateMachine\n')
	myfile.write('\t\t\t\tDestination = MARTe\n')
	myfile.write('\t\t\t\t+MESSAGE = {\n')
	myfile.write('\t\t\t\t\tClass = Message\n')
	myfile.write('\t\t\t\t\tContent = PULSESTOP\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t}\n')
	myfile.write('\t\t}\n')
	myfile.write('\t}\n')
	myfile.write('\t+EXECUTING = {\n')
	myfile.write('\t\tClass = StateMachineState\n')
	myfile.write('\t\tStateCode = 0x505\n')
	myfile.write('\t\t+ENTER = {\n')
	myfile.write('\t\t\tClass = MessageEnvelope\n')
	myfile.write('\t\t\tDestination = COULD.BE.A.MIMIC\n')
	myfile.write('\t\t\t+SENDSTATE = {\n')
	myfile.write('\t\t\t\tClass = Message\n')
	myfile.write('\t\t\t}\n')
	myfile.write('\t\t}\n')
	myfile.write('\t\t+ABORT = {\n')
	myfile.write('\t\t\tClass = StateMachineEvent\n')
	myfile.write('\t\t\tNextState = READY\n')
	myfile.write('\t\t\tCode = 0x702\n')
	myfile.write('\t\t\t+NOTIFY = {\n')
	myfile.write('\t\t\t\tClass = MessageEnvelope\n')
	myfile.write('\t\t\t\tSender = StateMachine\n')
	myfile.write('\t\t\t\tDestination = MARTe\n')
	myfile.write('\t\t\t\t+MESSAGE = {\n')
	myfile.write('\t\t\t\t\tClass = Message\n')
	myfile.write('\t\t\t\t\tContent = PULSESTOP\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t}\n')
	myfile.write('\t\t}\n')
	myfile.write('\t\t+END_PULSE = {\n')
	myfile.write('\t\t\tClass = StateMachineEvent\n')
	myfile.write('\t\t\tNextState = POST_PULSE\n')
	myfile.write('\t\t\tCode = 0x709\n')
	myfile.write('\t\t\t+NOTIFY = {\n')
	myfile.write('\t\t\t\tClass = MessageEnvelope\n')
	myfile.write('\t\t\t\tSender = StateMachine\n')
	myfile.write('\t\t\t\tDestination = MARTe\n')
	myfile.write('\t\t\t\t+MESSAGE = {\n')
	myfile.write('\t\t\t\t\tClass = Message\n')
	myfile.write('\t\t\t\t\tContent = PULSESTOP\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t}\n')
	myfile.write('\t\t}\n')
	myfile.write('\t}\n')
	myfile.write('\t+POST_PULSE = {\n')
	myfile.write('\t\tClass = StateMachineState\n')
	myfile.write('\t\tStateCode = 0x507\n')
	myfile.write('\t\t+ENTER = {\n')
	myfile.write('\t\t\tClass = MessageEnvelope\n')
	myfile.write('\t\t\tDestination = COULD.BE.A.MIMIC\n')
	myfile.write('\t\t\t+SENDSTATE = {\n')
	myfile.write('\t\t\t\tClass = Message\n')
	myfile.write('\t\t\t}\n')
	myfile.write('\t\t}\n')
	myfile.write('\t\t+PULSE_CHECKS_FINISHED = {\n')
	myfile.write('\t\t\tClass = StateMachineEvent\n')
	myfile.write('\t\t\tNextState = READY\n')
	myfile.write('\t\t\tCode = 0x703\n')
	myfile.write('\t\t\t+NOTIFY = {\n')
	myfile.write('\t\t\t\tClass = MessageEnvelope\n')
	myfile.write('\t\t\t\tSender = StateMachine\n')
	myfile.write('\t\t\t\tDestination = MARTe\n')
	myfile.write('\t\t\t\t+MESSAGE = {\n')
	myfile.write('\t\t\t\t\tClass = Message\n')
	myfile.write('\t\t\t\t\tContent = COLLECTIONCOMPLETED\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t}\n')
	myfile.write('\t\t}\n')
	myfile.write('\t}\n')
	myfile.write('\t+NOT_READY = {\n')
	myfile.write('\t\tClass = StateMachineState\n')
	myfile.write('\t\tStateCode = 0x601\n')
	myfile.write('\t\t+ACTIVATE = {\n')
	myfile.write('\t\t\tClass = StateMachineEvent\n')
	myfile.write('\t\t\tNextState = READY\n')
	myfile.write('\t\t\tCode = 0x705\n')
	myfile.write('\t\t}\n')
	myfile.write('\t}\n')
	myfile.write('\t+CONFIG_ERROR = {\n')
	myfile.write('\t\tClass = StateMachineState\n')
	myfile.write('\t\tStateCode = 0x601\n')
	myfile.write('\t\t+ENTER = {\n')
	myfile.write('\t\t\tClass = MessageEnvelope\n')
	myfile.write('\t\t\tDestination = COULD.BE.A.MIMIC\n')
	myfile.write('\t\t\t+SENDSTATE = {\n')
	myfile.write('\t\t\t\tClass = Message\n')
	myfile.write('\t\t\t}\n')
	myfile.write('\t\t}\n')
	myfile.write('\t\t+CONFIG_OK = {\n')
	myfile.write('\t\t\tClass = StateMachineEvent\n')
	myfile.write('\t\t\tNextState = READY\n')
	myfile.write('\t\t\tCode = 0x778\n')
	myfile.write('\t\t\t+NOTIFY = {\n')
	myfile.write('\t\t\t\tClass = MessageEnvelope\n')
	myfile.write('\t\t\t\tSender = StateMachine\n')
	myfile.write('\t\t\t\tDestination = COULD.BE.A.MIMIC\n')
	myfile.write('\t\t\t\t+SENDSTATE = {\n')
	myfile.write('\t\t\t\t\tClass = Message\n')
	myfile.write('\t\t\t\t\tCode = 0x500\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t}\n')
	myfile.write('\t\t}\n')
	myfile.write('\t}\n')
	myfile.write('\t+UNRECOVERABLE = {\n')
	myfile.write('\t\tClass = StateMachineState\n')
	myfile.write('\t\tStateCode = 0x601\n')
	myfile.write('\t\t+DEFAULT = {\n')
	myfile.write('\t\t\tClass = StateMachineEvent\n')
	myfile.write('\t\t\tUserCode = 0\n')
	myfile.write('\t\t\tNextState = UNRECOVERABLE\n')
	myfile.write('\t\t}\n')
	myfile.write('\t}\n')
	myfile.write('\t+COMM_ERROR = {\n')
	myfile.write('\t\tClass = StateMachineState\n')
	myfile.write('\t\tStateCode = 0x601\n')
	myfile.write('\t\t+ABORT = {\n')
	myfile.write('\t\t\tClass = StateMachineEvent\n')
	myfile.write('\t\t\tNextState = SAMESTATE\n')
	myfile.write('\t\t\tCode = 0x702\n')
	myfile.write('\t\t}\n')
	myfile.write('\t}\n')
	myfile.write('\t+DEFAULT = {\n')
	myfile.write('\t\tClass = StateMachineState\n')
	myfile.write('\t\tStateCode = 0x601\n')
	myfile.write('\t\t+ABORT = {\n')
	myfile.write('\t\t\tClass = StateMachineEvent\n')
	myfile.write('\t\t\tNextState = READY\n')
	myfile.write('\t\t\tCode = 0x702\n')
	myfile.write('\t\t}\n')
	myfile.write('\t}\n')
	myfile.write('}\n')
	myfile.write('+MARTeMenu = {\n')
	myfile.write('\tClass = MarteSupLib::MARTeMenu\n')
	myfile.write('\tTitle = "MARTe Menu"\n')
	myfile.write('\t+MenuA = {\n')
	myfile.write('\t\tClass = MenuContainer\n')
	myfile.write('\t\tTitle = "CODAS Interface"\n')
	myfile.write('\t\t+ABORT = {\n')
	myfile.write('\t\t\tClass = SendMessageMenuEntry\n')
	myfile.write('\t\t\tTitle = Abort\n')
	myfile.write('\t\t\tEnvelope = {\n')
	myfile.write('\t\t\t\tClass = MessageEnvelope\n')
	myfile.write('\t\t\t\tSender = MARTeMenu\n')
	myfile.write('\t\t\t\tDestination = StateMachine\n')
	myfile.write('\t\t\t\t+Message = {\n')
	myfile.write('\t\t\t\t\tClass = Message\n')
	myfile.write('\t\t\t\t\tCode = 0x702\n')
	myfile.write('\t\t\t\t\tContent = ABORT\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t}\n')
	myfile.write('\t\t}\n')
	myfile.write('\t\t+INHIBIT = {\n')
	myfile.write('\t\t\tClass = SendMessageMenuEntry\n')
	myfile.write('\t\t\tTitle = Inhibit\n')
	myfile.write('\t\t\tEnvelope = {\n')
	myfile.write('\t\t\t\tClass = MessageEnvelope\n')
	myfile.write('\t\t\t\tSender = MARTeMenu\n')
	myfile.write('\t\t\t\tDestination = StateMachine\n')
	myfile.write('\t\t\t\t+Message = {\n')
	myfile.write('\t\t\t\t\tClass = Message\n')
	myfile.write('\t\t\t\t\tCode = 0x704\n')
	myfile.write('\t\t\t\t\tContent = Inhibit\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t}\n')
	myfile.write('\t\t}\n')
	myfile.write('\t\t+ACTIVATE = {\n')
	myfile.write('\t\t\tClass = SendMessageMenuEntry\n')
	myfile.write('\t\t\tTitle = Activate\n')
	myfile.write('\t\t\tEnvelope = {\n')
	myfile.write('\t\t\t\tClass = MessageEnvelope\n')
	myfile.write('\t\t\t\tSender = MARTeMenu\n')
	myfile.write('\t\t\t\tDestination = StateMachine\n')
	myfile.write('\t\t\t\t+Message = {\n')
	myfile.write('\t\t\t\t\tClass = Message\n')
	myfile.write('\t\t\t\t\tCode = 0x705\n')
	myfile.write('\t\t\t\t\tContent = Activate\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t}\n')
	myfile.write('\t\t}\n')
	myfile.write('\t\t+PULSESETUPCOMPLETE = {\n')
	myfile.write('\t\t\tClass = SendMessageMenuEntry\n')
	myfile.write('\t\t\tTitle = "Pulse Setup Complete"\n')
	myfile.write('\t\t\tEnvelope = {\n')
	myfile.write('\t\t\t\tClass = MessageEnvelope\n')
	myfile.write('\t\t\t\tSender = MARTeMenu\n')
	myfile.write('\t\t\t\tDestination = StateMachine\n')
	myfile.write('\t\t\t\t+Message = {\n')
	myfile.write('\t\t\t\t\tClass = Message\n')
	myfile.write('\t\t\t\t\tCode = 0x701\n')
	myfile.write('\t\t\t\t\tContent = WAITING_FOR_PRE\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t}\n')
	myfile.write('\t\t}\n')
	myfile.write('\t\t+PRE = {\n')
	myfile.write('\t\t\tClass = SendMessageMenuEntry\n')
	myfile.write('\t\t\tTitle = "Pulse Start"\n')
	myfile.write('\t\t\tEnvelope = {\n')
	myfile.write('\t\t\t\tClass = MessageEnvelope\n')
	myfile.write('\t\t\t\tSender = MARTeMenu\n')
	myfile.write('\t\t\t\tDestination = StateMachine\n')
	myfile.write('\t\t\t\t+Message = {\n')
	myfile.write('\t\t\t\t\tClass = Message\n')
	myfile.write('\t\t\t\t\tCode = 0x708\n')
	myfile.write('\t\t\t\t\tContent = PRE\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t}\n')
	myfile.write('\t\t}\n')
	myfile.write('\t\t+EJP = {\n')
	myfile.write('\t\t\tClass = SendMessageMenuEntry\n')
	myfile.write('\t\t\tTitle = "Pulse End"\n')
	myfile.write('\t\t\tEnvelope = {\n')
	myfile.write('\t\t\t\tClass = MessageEnvelope\n')
	myfile.write('\t\t\t\tSender = MARTeMenu\n')
	myfile.write('\t\t\t\tDestination = StateMachine\n')
	myfile.write('\t\t\t\t+Message = {\n')
	myfile.write('\t\t\t\t\tClass = Message\n')
	myfile.write('\t\t\t\t\tCode = 0x709\n')
	myfile.write('\t\t\t\t\tContent = EJP\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t}\n')
	myfile.write('\t\t}\n')
	myfile.write('\t\t+COLLECTIONCOMPLETED = {\n')
	myfile.write('\t\t\tClass = SendMessageMenuEntry\n')
	myfile.write('\t\t\tTitle = "Collection Completed"\n')
	myfile.write('\t\t\tEnvelope = {\n')
	myfile.write('\t\t\t\tClass = MessageEnvelope\n')
	myfile.write('\t\t\t\tSender = MARTeMenu\n')
	myfile.write('\t\t\t\tDestination = StateMachine\n')
	myfile.write('\t\t\t\t+Message = {\n')
	myfile.write('\t\t\t\t\tClass = Message\n')
	myfile.write('\t\t\t\t\tCode = 0x703\n')
	myfile.write('\t\t\t\t\tContent = POSTPULSE\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t}\n')
	myfile.write('\t\t}\n')
	myfile.write('\t}\n')
	myfile.write('\tAddReference = MARTe.MARTe\n')
	myfile.write('}\n')
	myfile.write('+MARTe = {\n')
	myfile.write('\tClass = MARTeContainer\n')
	myfile.write('\tStateMachineName = StateMachine\n')
	myfile.write('\tLevel1Name = LEVEL1\n')
	myfile.write('\tMenuContainerName = MARTe\n')
	myfile.write('\t+MARTe = {\n')
	myfile.write('\t\tClass = MenuContainer\n')
	myfile.write('\t}\n')
	myfile.write('\t+DriverPool = {\n')
	myfile.write('\t\tClass = GCReferenceContainer\n')
	myfile.write('\t\t+TimerBoard = {\n')
	myfile.write('\t\t\tClass = GenericTimerDrv\n')
	myfile.write('\t\t\tCPUMask = 1\n')
	myfile.write('\t\t\tNumberOfOutputs = 0\n')
	myfile.write('\t\t\tTimerUsecPeriod = 1000\n')
	myfile.write('\t\t\tNumberOfInputs = 2\n')
	myfile.write('\t\t\tSynchronizationMethod = Synchronizing\n')
	myfile.write('\t\t}\n')
	myfile.write('\t\t+FileReader = {\n')
	myfile.write('\t\t\tClass = FileReadDrv\n')
	myfile.write('\t\t\tTimeFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/timeBase.bin"\n')
	myfile.write('\t\t\tNumberOfInputs  = 55\n')
	myfile.write('\t\t\t+file_time = {\n')
	myfile.write('\t\t\t\tClass = FileSignalList\n')
	myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/timeBase.bin"\n')
	myfile.write('\t\t\t\tSignalType  = uint32\n')
	myfile.write('\t\t\t\tSignalArraySize = 1\n')
	myfile.write('\t\t\t}\n')
	if out_option != "ADC_tomography_top_0":
	        myfile.write('\t\t\t+file_ch0 = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_000.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_tomography_top_1":
	        myfile.write('\t\t\t+file_ch1 = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_001.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_tomography_top_2":
	        myfile.write('\t\t\t+file_ch2 = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_002.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_tomography_top_3":
	        myfile.write('\t\t\t+file_ch3 = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_003.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_tomography_top_4":
	        myfile.write('\t\t\t+file_ch4 = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_004.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_tomography_top_5":
	        myfile.write('\t\t\t+file_ch5 = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_005.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_tomography_top_6":
	        myfile.write('\t\t\t+file_ch6 = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_006.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_tomography_top_7":
	        myfile.write('\t\t\t+file_ch7 = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_007.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_tomography_outer_0":
	        myfile.write('\t\t\t+file_ch8 = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_008.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_tomography_outer_1":
	        myfile.write('\t\t\t+file_ch9 = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_009.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_tomography_outer_2":
	        myfile.write('\t\t\t+file_ch10 = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_010.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_tomography_outer_3":
	        myfile.write('\t\t\t+file_ch11 = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_011.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_tomography_outer_4":
	        myfile.write('\t\t\t+file_ch12 = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_012.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_tomography_outer_5":
	        myfile.write('\t\t\t+file_ch13 = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_013.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_tomography_outer_6":
	        myfile.write('\t\t\t+file_ch14 = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_014.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_tomography_outer_7":
	        myfile.write('\t\t\t+file_ch15 = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_015.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_tomography_bottom_0":
	        myfile.write('\t\t\t+file_ch16 = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_016.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_tomography_bottom_1":
	        myfile.write('\t\t\t+file_ch17 = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_017.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_tomography_bottom_2":
	        myfile.write('\t\t\t+file_ch18 = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_018.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_tomography_bottom_3":
	        myfile.write('\t\t\t+file_ch19 = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_019.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_tomography_bottom_4":
	        myfile.write('\t\t\t+file_ch20 = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_020.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_tomography_bottom_5":
	        myfile.write('\t\t\t+file_ch21 = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_021.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_tomography_bottom_6":
	        myfile.write('\t\t\t+file_ch22 = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_022.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_tomography_bottom_7":
	        myfile.write('\t\t\t+file_ch23 = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_023.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_electric_top_near":
	        myfile.write('\t\t\t+file_ADC_electric_top_near = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_024.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_electric_outer_near":
	        myfile.write('\t\t\t+file_ADC_electric_outer_near = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_025.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_electric_bottom_near":
	        myfile.write('\t\t\t+file_ADC_electric_bottom_near = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_026.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_electric_inner_near":
	        myfile.write('\t\t\t+file_ADC_electric_inner_near = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_027.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_magnetic_0":
	        myfile.write('\t\t\t+file_ADC_magnetic_0 = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_028.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_magnetic_1":
	        myfile.write('\t\t\t+file_ADC_magnetic_1 = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_029.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_magnetic_2":
	        myfile.write('\t\t\t+file_ADC_magnetic_2 = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_030.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_magnetic_3":
	        myfile.write('\t\t\t+file_ADC_magnetic_3 = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_031.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_magnetic_4":
	        myfile.write('\t\t\t+file_ADC_magnetic_4 = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_032.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_magnetic_5":
	        myfile.write('\t\t\t+file_ADC_magnetic_5 = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_033.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_magnetic_6":
	        myfile.write('\t\t\t+file_ADC_magnetic_6 = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_034.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_magnetic_7":
	        myfile.write('\t\t\t+file_ADC_magnetic_7 = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_035.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_magnetic_8":
	        myfile.write('\t\t\t+file_ADC_magnetic_8 = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_036.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_magnetic_9":
	        myfile.write('\t\t\t+file_ADC_magnetic_9 = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_037.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_magnetic_10":
	        myfile.write('\t\t\t+file_ADC_magnetic_10 = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_038.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_magnetic_11":
	        myfile.write('\t\t\t+file_ADC_magnetic_11 = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_039.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_primary_current":
		myfile.write('\t\t\t+file_ADC_primary_current = {\n')
		myfile.write('\t\t\t\tClass = FileSignalList\n')
		myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_040.bin"\n')
		myfile.write('\t\t\t\tSignalType  = float\n')
		myfile.write('\t\t\t\tSignalArraySize = 1\n')
		myfile.write('\t\t\t}\n')
	if out_option != "ADC_vertical_current":
		myfile.write('\t\t\t+file_ADC_vertical_current = {\n')
		myfile.write('\t\t\t\tClass = FileSignalList\n')
		myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_041.bin"\n')
		myfile.write('\t\t\t\tSignalType  = float\n')
		myfile.write('\t\t\t\tSignalArraySize = 1\n')
		myfile.write('\t\t\t}\n')
	if out_option != "ADC_horizontal_current":
		myfile.write('\t\t\t+file_ADC_horizontal_current = {\n')
		myfile.write('\t\t\t\tClass = FileSignalList\n')
		myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_042.bin"\n')
		myfile.write('\t\t\t\tSignalType  = float\n')
		myfile.write('\t\t\t\tSignalArraySize = 1\n')
		myfile.write('\t\t\t}\n')
	if out_option != "DC_vloop":
	        myfile.write('\t\t\t+file_ADC_vloop = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_043.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_interferometry_sine":
	        myfile.write('\t\t\t+file_ADC_interferometry_sine = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_044.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_interferometry_cosine":
	        myfile.write('\t\t\t+file_ADC_interferometry_cosine = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_045.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_H_alpha":
	        myfile.write('\t\t\t+file_ADC_H_alpha = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_046.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_sine_probe":
	        myfile.write('\t\t\t+file_ADC_sine_probe = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_047.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_cosine_probe":
	        myfile.write('\t\t\t+file_ADC_cosine_probe = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_048.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "ADC_main_rogowski":
	        myfile.write('\t\t\t+file_ADC_main_rogowski = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_049.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	if out_option != "InSaturation":
		myfile.write('\t\t\t+file_InSaturation = {\n')
		myfile.write('\t\t\t\tClass = FileSignalList\n')
		myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_097.bin"\n')
		myfile.write('\t\t\t\tSignalType  = int32\n')
		myfile.write('\t\t\t\tSignalArraySize = 1\n')
		myfile.write('\t\t\t}\n')
	if out_option != "MagneticProbesR":
		myfile.write('\t\t\t+file_MagneticProbesR = {\n')
		myfile.write('\t\t\t\tClass = FileSignalList\n')
		myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_083.bin"\n')
		myfile.write('\t\t\t\tSignalType  = float\n')
		myfile.write('\t\t\t\tSignalArraySize = 1\n')
		myfile.write('\t\t\t}\n')
	if out_option != "MagneticProbesZ":
		myfile.write('\t\t\t+file_MagneticProbesZ = {\n')
		myfile.write('\t\t\t\tClass = FileSignalList\n')
		myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_084.bin"\n')
		myfile.write('\t\t\t\tSignalType  = float\n')
		myfile.write('\t\t\t\tSignalArraySize = 1\n')
		myfile.write('\t\t\t}\n')
	if out_option != "MagneticProbesPlasmaCurrent":
		myfile.write('\t\t\t+file_MagneticProbesPlasmaCurrent = {\n')
		myfile.write('\t\t\t\tClass = FileSignalList\n')
		myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_085.bin"\n')
		myfile.write('\t\t\t\tSignalType  = float\n')
		myfile.write('\t\t\t\tSignalArraySize = 1\n')
		myfile.write('\t\t\t}\n')
	if out_option != "ADC_v_primary":
	        myfile.write('\t\t\t+file_ADC_v_primary = {\n')
	        myfile.write('\t\t\t\tClass = FileSignalList\n')
	        myfile.write('\t\t\t\tFileName = "/home/pricardofc/CSS-Workspaces/sys-mng-opi/CSS/data/test/Channel_104.bin"\n')
	        myfile.write('\t\t\t\tSignalType  = float\n')
	        myfile.write('\t\t\t\tSignalArraySize = 1\n')
	        myfile.write('\t\t\t}\n')
	myfile.write('\t\t}\n')
	myfile.write('\t}\n')
	myfile.write('\t+ExternalTimeTriggeringService = {\n')
	myfile.write('\t\tClass = InterruptDrivenTTS\n')
	myfile.write('\t\tTsOfflineUsecPhase = 0\n')
	myfile.write('\t\tTsOnlineUsecPhase = 0\n')
	myfile.write('\t\tTsOfflineUsecPeriod = 1000\n')
	myfile.write('\t\tTsOnlineUsecPeriod = 1000\n')
	myfile.write('\t\tTimeModule = {\n')
	myfile.write('\t\t\tBoardName = TimerBoard\n')
	myfile.write('\t\t}\n')
	myfile.write('\t}\n')
	myfile.write('\t+Messages = {\n')
	myfile.write('\t\tClass = GCReferenceContainer\n')
	myfile.write('\t\t+FatalErrorMessage = {\n')
	myfile.write('\t\t\tClass = MessageDeliveryRequest\n')
	myfile.write('\t\t\tDestinations = StateMachine\n')
	myfile.write('\t\t\tMsecTimeOut = 1000\n')
	myfile.write('\t\t\tFlags = NoReply\n')
	myfile.write('\t\t\tMessage = {\n')
	myfile.write('\t\t\t\tClass = Message\n')
	myfile.write('\t\t\t\tCode = 0x776\n')
	myfile.write('\t\t\t\tContent = UNRECOVERABLE\n')
	myfile.write('\t\t\t}\n')
	myfile.write('\t\t}\n')
	myfile.write('\t\t+ConfigLoadErrorMessage = {\n')
	myfile.write('\t\t\tClass = MessageDeliveryRequest\n')
	myfile.write('\t\t\tDestinations = StateMachine\n')
	myfile.write('\t\t\tMsecTimeOut = 1000\n')
	myfile.write('\t\t\tFlags = NoReply\n')
	myfile.write('\t\t\tMessage = {\n')
	myfile.write('\t\t\t\tClass = Message\n')
	myfile.write('\t\t\t\tCode = 0x777\n')
	myfile.write('\t\t\t\tContent = CONFIG_ERROR\n')
	myfile.write('\t\t\t}\n')
	myfile.write('\t\t}\n')
	myfile.write('\t\t+ConfigLoadOKMessage = {\n')
	myfile.write('\t\t\tClass = MessageDeliveryRequest\n')
	myfile.write('\t\t\tDestinations = StateMachine\n')
	myfile.write('\t\t\tMsecTimeOut = 1000\n')
	myfile.write('\t\t\tFlags = NoReply\n')
	myfile.write('\t\t\tMessage = {\n')
	myfile.write('\t\t\t\tClass = Message\n')
	myfile.write('\t\t\t\tCode = 0x778\n')
	myfile.write('\t\t\t\tContent = CONFIG_OK\n')
	myfile.write('\t\t\t}\n')
	myfile.write('\t\t}\n')
	myfile.write('\t\t+SafetyErrorMessage = {\n')
	myfile.write('\t\t\tClass = MessageDeliveryRequest\n')
	myfile.write('\t\t\tDestinations = MARTe\n')
	myfile.write('\t\t\tMsecTimeOut = 1000\n')
	myfile.write('\t\t\tFlags = NoReply\n')
	myfile.write('\t\t\tMessage = {\n')
	myfile.write('\t\t\t\tClass = Message\n')
	myfile.write('\t\t\t\tContent = ERROR\n')
	myfile.write('\t\t\t}\n')
	myfile.write('\t\t}\n')
	myfile.write('\t}\n')
	myfile.write('\t+RealTimeThread = {\n')
	myfile.write('\t\tClass = RealTimeThread\n')
	myfile.write('\t\tThreadPriority = 0\n')
	myfile.write('\t\tRunOnCPU = 8\n')
	myfile.write('\t\tRTStatusChangeMsecTimeout = 1000\n')
	myfile.write('\t\tSMStatusChangeMsecTimeout = 1000\n')
	myfile.write('\t\tOfflineSemaphoreTimeout = 100\n')
	myfile.write('\t\tTriggeringServiceName = MARTe.ExternalTimeTriggeringService\n')
	myfile.write('\t\t+DDB = {\n')
	myfile.write('\t\t\tClass = DDB\n')
	myfile.write('\t\t\tFake = 1\n')
	myfile.write('\t\t}\n')
	myfile.write('\t\t+Timer = {\n')
	myfile.write('\t\t\tClass = IOGAMs::TimeInputGAM\n')
	myfile.write('\t\t\tTriggeringServiceName = ExternalTimeTriggeringService\n')
	myfile.write('\t\t\tBoardName = TimerBoard\n')
	myfile.write('\t\t\tSignals = {\n')
	myfile.write('\t\t\t\ttime = {\n')
	myfile.write('\t\t\t\t\tSignalName = usecTime\n')
	myfile.write('\t\t\t\t\tSignalType = int32\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tcounter = {\n')
	myfile.write('\t\t\t\t\tSignalName = counter\n')
	myfile.write('\t\t\t\t\tSignalType = int32\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t}\n')
	myfile.write('\t\t}\n')
	myfile.write('\t\t+InputATCA = {\n')
	myfile.write('\t\t\tClass = IOGAMs::InputGAM\n')
	myfile.write('\t\t\tBoardName = FileReader\n')
	myfile.write('\t\t\tUsecTimeSignalName = usecTime\n')
	myfile.write('\t\t\tSignals = {\n')
	myfile.write('\t\t\t\tTime = {\n')
	myfile.write('\t\t\t\t\tSignalName = fileTime\n')
	myfile.write('\t\t\t\t\tSignalType = int32\n')
	myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_tomography_top_0":
	        myfile.write('\t\t\t\tch_0 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_tomography_top_0\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_tomography_top_1":
	        myfile.write('\t\t\t\tch_1 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_tomography_top_1\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_tomography_top_2":
	        myfile.write('\t\t\t\tch_2 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_tomography_top_2\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_tomography_top_3":
	        myfile.write('\t\t\t\tch_3 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_tomography_top_3\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_tomography_top_4":
	        myfile.write('\t\t\t\tch_4 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_tomography_top_4\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_tomography_top_5":
	        myfile.write('\t\t\t\tch_5 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_tomography_top_5\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_tomography_top_6":
	        myfile.write('\t\t\t\tch_6 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_tomography_top_6\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_tomography_top_7":
	        myfile.write('\t\t\t\tch_7 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_tomography_top_7\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_tomography_outer_0":
	        myfile.write('\t\t\t\tch_8 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_tomography_outer_0\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_tomography_outer_1":
	        myfile.write('\t\t\t\tch_9 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_tomography_outer_1\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_tomography_outer_2":
	        myfile.write('\t\t\t\tch_10 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_tomography_outer_2\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_tomography_outer_3":
	        myfile.write('\t\t\t\tch_11 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_tomography_outer_3\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_tomography_outer_4":
	        myfile.write('\t\t\t\tch_12 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_tomography_outer_4\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_tomography_outer_5":
	        myfile.write('\t\t\t\tch_13 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_tomography_outer_5\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_tomography_outer_6":
	        myfile.write('\t\t\t\tch_14 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_tomography_outer_6\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_tomography_outer_7":
	        myfile.write('\t\t\t\tch_15 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_tomography_outer_7\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_tomography_bottom_0":
	        myfile.write('\t\t\t\tch_16 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_tomography_bottom_0\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_tomography_bottom_1":
	        myfile.write('\t\t\t\tch_17 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_tomography_bottom_1\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_tomography_bottom_2":
	        myfile.write('\t\t\t\tch_18 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_tomography_bottom_2\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_tomography_bottom_3":
	        myfile.write('\t\t\t\tch_19 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_tomography_bottom_3\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_tomography_bottom_4":
	        myfile.write('\t\t\t\tch_20 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_tomography_bottom_4\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_tomography_bottom_5":
	        myfile.write('\t\t\t\tch_21 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_tomography_bottom_5\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_tomography_bottom_6":
	        myfile.write('\t\t\t\tch_22 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_tomography_bottom_6\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_tomography_bottom_7":
	        myfile.write('\t\t\t\tch_23 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_tomography_bottom_7\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_electric_top_near":
	        myfile.write('\t\t\t\tch_24 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_electric_top_near\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_electric_outer_near":
	        myfile.write('\t\t\t\tch_25 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_electric_outer_near\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_electric_bottom_near":
	        myfile.write('\t\t\t\tch_26 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_electric_bottom_near\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_electric_inner_near":
	        myfile.write('\t\t\t\tch_27 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_electric_inner_near\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_magnetic_0":
	        myfile.write('\t\t\t\tch_28 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_magnetic_0\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_magnetic_1":
	        myfile.write('\t\t\t\tch_29 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_magnetic_1\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_magnetic_2":
	        myfile.write('\t\t\t\tch_30 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_magnetic_2\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_magnetic_3":
	        myfile.write('\t\t\t\tch_31 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_magnetic_3\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_magnetic_4":
	        myfile.write('\t\t\t\tch_32 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_magnetic_4\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_magnetic_5":
	        myfile.write('\t\t\t\tch_33 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_magnetic_5\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_magnetic_6":
	        myfile.write('\t\t\t\tch_34 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_magnetic_6\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_magnetic_7":
	        myfile.write('\t\t\t\tch_35 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_magnetic_7\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_magnetic_8":
	        myfile.write('\t\t\t\tch_36 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_magnetic_8\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_magnetic_9":
	        myfile.write('\t\t\t\tch_37 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_magnetic_9\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_magnetic_10":
	        myfile.write('\t\t\t\tch_38 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_magnetic_10\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_magnetic_11":
	        myfile.write('\t\t\t\tch_39 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_magnetic_11\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_primary_current":
		myfile.write('\t\t\t\tch_40 = {\n')
		myfile.write('\t\t\t\t\tSignalName = ADC_primary_current\n')
		myfile.write('\t\t\t\t\tSignalType = float\n')
		myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_vertical_current":
		myfile.write('\t\t\t\tch_41 = {\n')
		myfile.write('\t\t\t\t\tSignalName = ADC_vertical_current\n')
		myfile.write('\t\t\t\t\tSignalType = float\n')
		myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_horizontal_current":
		myfile.write('\t\t\t\tch_42 = {\n')
		myfile.write('\t\t\t\t\tSignalName = ADC_horizontal_current\n')
		myfile.write('\t\t\t\t\tSignalType = float\n')
		myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_H_alpha":
	        myfile.write('\t\t\t\tch_46 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_H_alpha\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_sine_probe":
	        myfile.write('\t\t\t\tch_47 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_sine_probe\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_cosine_probe":
	        myfile.write('\t\t\t\tch_48 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_cosine_probe\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_main_rogowski":
	        myfile.write('\t\t\t\tch_49 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_main_rogowski\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_interferometry_sine":
	        myfile.write('\t\t\t\tch_44 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_interferometry_sine\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_interferometry_cosine":
	        myfile.write('\t\t\t\tch_45 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_interferometry_cosine\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_vloop":
	        myfile.write('\t\t\t\tch_43 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_vloop\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	if out_option != "InSaturation":
		myfile.write('\t\t\t\tch_97 = {\n')
		myfile.write('\t\t\t\t\tSignalName = InSaturation\n')
		myfile.write('\t\t\t\t\tSignalType = int32\n')
		myfile.write('\t\t\t\t}\n')
	if out_option != "MagneticProbesR":
		myfile.write('\t\t\t\tch_83 = {\n')
		myfile.write('\t\t\t\t\tSignalName = MagneticProbesR\n')
		myfile.write('\t\t\t\t\tSignalType = float\n')
		myfile.write('\t\t\t\t}\n')
	if out_option != "MagneticProbesZ":
		myfile.write('\t\t\t\tch_84 = {\n')
		myfile.write('\t\t\t\t\tSignalName = MagneticProbesZ\n')
		myfile.write('\t\t\t\t\tSignalType = float\n')
		myfile.write('\t\t\t\t}\n')
	if out_option != "MagneticProbesPlasmaCurrent":
		myfile.write('\t\t\t\tch_85 = {\n')
		myfile.write('\t\t\t\t\tSignalName = MagneticProbesPlasmaCurrent\n')
		myfile.write('\t\t\t\t\tSignalType = float\n')
		myfile.write('\t\t\t\t}\n')
	if out_option != "ADC_v_primary":
	        myfile.write('\t\t\t\tch_104 = {\n')
	        myfile.write('\t\t\t\t\tSignalName = ADC_v_primary\n')
	        myfile.write('\t\t\t\t\tSignalType = float\n')
	        myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t}\n')
	myfile.write('\t\t}\n')
	myfile.write('\t\t+')
	myfile.write( display.getWidget("FileNameTextInput2").getPropertyValue("text"))
	myfile.write(' = {\n')
	myfile.write('\t\t\tClass = ')
	myfile.write(display.getWidget("FileNameTextInput2").getPropertyValue("text"))
	myfile.write('GAM\n')
	myfile.write('\t\t\tinput_signals = {\n')
	myfile.write(display.getWidget("contentInputLabel2").getPropertyValue("text"))
	myfile.write('\t\t\t}\n')
	myfile.write('\t\t\toutput_signals = {\n')
	myfile.write(display.getWidget("contentOutputLabel2").getPropertyValue("text"))
	myfile.write('\t\t\t}\n')
	myfile.write('\t\t}\n')
	myfile.write('\t\t+Statistic = {\n')
	myfile.write('\t\t\tClass = WebStatisticGAM\n')
	myfile.write('\t\t\tVerbose = True\n')
	myfile.write('\t\t\tFrequencyOfVerbose = 2000000\n')
	myfile.write('\t\t\tSignals = {\n')
	myfile.write('\t\t\t\tSignalU = {\n')
	myfile.write('\t\t\t\t\tSignalName = usecTime\n')
	myfile.write('\t\t\t\t\tSignalType = int32\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tSignal0 = {\n')
	myfile.write('\t\t\t\t\tSignalName = CycleUsecTime\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write(display.getWidget("contentInputLabel2").getPropertyValue("text"))
	myfile.write(display.getWidget("contentOutputLabel2").getPropertyValue("text"))
	myfile.write('\t\t\t}\n')
	myfile.write('\t\t}\n')
	myfile.write('\t\t+EPICSStream = {\n')
	myfile.write('\t\t\tClass = EPICSGAM\n')
	myfile.write('\t\t\tUsecTimeSignalName = usecTime\n')
	myfile.write('\t\t\tTimeSignalType = int32\n')
	myfile.write('\t\t\tSignalsServer = EPICSLib\n')
	myfile.write('\t\t\tNOfAcquisitionSamples = 6000\n')
	myfile.write('\t\t\tSignals = {\n')
	myfile.write('\t\t\t\tsign1 = {\n')
	myfile.write('\t\t\t\t\tSignalName = CycleUsecTime\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-CYCLE-TIME-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign98 = {\n')
	myfile.write('\t\t\t\t\tSignalName = fileTime\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = int32\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-FILE-TIME-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign99 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_tomography_top_0\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-TOMO-TOP0-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign100 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_tomography_top_1\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-TOMO-TOP1-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign101 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_tomography_top_2\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-TOMO-TOP2-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign102 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_tomography_top_3\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-TOMO-TOP3-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign103 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_tomography_top_4\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-TOMO-TOP4-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign104 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_tomography_top_5\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-TOMO-TOP5-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign105 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_tomography_top_6\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-TOMO-TOP6-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign106 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_tomography_top_7\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-TOMO-TOP7-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign107 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_tomography_outer_0\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-TOMO-OUT0-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign108 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_tomography_outer_1\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-TOMO-OUT1-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign109 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_tomography_outer_2\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-TOMO-OUT2-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign110 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_tomography_outer_3\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-TOMO-OUT3-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign111 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_tomography_outer_4\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-TOMO-OUT4-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign112 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_tomography_outer_5\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-TOMO-OUT5-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign113 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_tomography_outer_6\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-TOMO-OUT6-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign114 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_tomography_outer_7\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-TOMO-OUT7-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign115 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_tomography_bottom_0\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-TOMO-BOT0-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign116 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_tomography_bottom_1\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-TOMO-BOT1-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign117 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_tomography_bottom_2\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-TOMO-BOT2-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign118 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_tomography_bottom_3\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-TOMO-BOT3-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign119 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_tomography_bottom_4\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-TOMO-BOT4-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign120 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_tomography_bottom_5\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-TOMO-BOT5-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign121 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_tomography_bottom_6\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-TOMO-BOT6-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign122 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_tomography_bottom_7\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-TOMO-BOT7-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign123 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_H_alpha\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-ADC-H-ALPHA-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign124 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_v_primary\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-ADC-V-PRI-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign125 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_sine_probe\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-ADC-SIN-PROBE-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign126 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_cosine_probe\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-ADC-COS-PROBE-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign127 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_main_rogowski\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-ADC-MAIN-ROGW-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign128 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_horizontal_current\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-ADC-HORZ-CURR-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign129 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_vertical_current\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-ADC-VERT-CURR-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign130 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_primary_current\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-ADC-PRIM-CURR-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign131 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_interferometry_sine\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-ADC-INTF-SIN-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign132 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_interferometry_cosine\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-ADC-INTF-COS-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign133 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_vloop\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-ADC-V-LOOP-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign134 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_magnetic_0\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-ADC-MAGN-0-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign135 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_magnetic_1\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-ADC-MAGN-1-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign136 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_magnetic_2\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-ADC-MAGN-2-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign137 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_magnetic_3\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-ADC-MAGN-3-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign138 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_magnetic_4\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-ADC-MAGN-4-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign139 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_magnetic_5\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-ADC-MAGN-5-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign140 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_magnetic_6\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-ADC-MAGN-6-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign141 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_magnetic_7\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-ADC-MAGN-7-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign142 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_magnetic_8\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-ADC-MAGN-8-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign143 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_magnetic_9\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-ADC-MAGN-9-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign144 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_magnetic_10\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-ADC-MAGN-10-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign145 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_magnetic_11\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-ADC-MAGN-11-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign146 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_electric_top_near\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-ADC-ETOP-NEAR-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign147 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_electric_outer_near\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-ADC-EOUT-NEAR-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign148 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_electric_bottom_near\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-ADC-EBOT-NEAR-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign149 = {\n')
	myfile.write('\t\t\t\t\tSignalName = ADC_electric_inner_near\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-ADC-EINN-NEAR-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign150 = {\n')
	myfile.write('\t\t\t\t\tSignalName = InSaturation\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = int32\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-IN-SATU-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign153 = {\n')
	myfile.write('\t\t\t\t\tSignalName = MagneticProbesR\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-MAGN-PRBR-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign154 = {\n')
	myfile.write('\t\t\t\t\tSignalName = MagneticProbesZ\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-MAGN-PRBZ-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsign155 = {\n')
	myfile.write('\t\t\t\t\tSignalName = MagneticProbesPlasmaCurrent\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = float\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-MAGN-PPC-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t\tsignUTime = {\n')
	myfile.write('\t\t\t\t\tSignalName = usecTime\n')
	myfile.write('\t\t\t\t\tServerSubSampling = 1\n')
	myfile.write('\t\t\t\t\tSignalType = int32\n')
	myfile.write('\t\t\t\t\tServerName = TEST-MNGR-PCF2:STMA-USEC-TIME-G\n')
	myfile.write('\t\t\t\t}\n')
	myfile.write('\t\t\t}\n')
	myfile.write('\t\t}\n')
	myfile.write('\t\tOnline = "Timer InputATCA '+display.getWidget("FileNameTextInput2").getPropertyValue("text")+' Statistic EPICSStream"\n')
	myfile.write('\t\tOffline = "Timer InputATCA '+display.getWidget("FileNameTextInput2").getPropertyValue("text")+' Statistic EPICSStream"\n')
	myfile.write('\t\tSafety = "Timer"\n')
	myfile.write('\t}\n')
	myfile.write('}')
	myfile.close()
	
	pvs[1].setValue(1)
